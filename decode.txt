    char ch;
    int key;
    string charKey;
    string symbol;
    ifstream table("codetext.txt", ifstream::binary);

    while(table.get(ch))
    {
        if(ch == 'T') //если не т => либо cr либо sp либо какой то символ, но не пробел пока что
        {
            table.get(ch); //если не A то я считал пробел, => начинаю читать число
            if(ch == 'A')
            {
                table.get(ch);
                if(ch == 'B')
                {
                    return; //таблица закончилась
                }
                charKey.clear();
                symbol = "A";
                do{
                    table.get(ch);
                    charKey += string(1,ch);
                } while(ch != ' ');
                key = string_to_int(charKey);
                listOfFreq.push_back(make_pair(key, symbol));
            }

            charKey.clear();
            symbol = "T";
            do{
                table.get(ch);
                charKey += string(1,ch);
            } while(ch != ' ');
            key = string_to_int(charKey);
            listOfFreq.push_back(make_pair(key, symbol));
        }
        table.get(ch);

        if(ch == 'c') //начинаем икать cr
        {
            table.get(ch); //считали либо r либо пробел
            if(ch == 'r') //если r то нашли cr
            {
                symbol = "cr";
                table.get(ch); //считали пробел
                ch = '1'; //устанавливаем ch в любой символ кроме пробела, чтобы начать while
                charKey.clear();
                while(ch != ' ') //читаем число
                {
                    table.get(ch);
                    charKey += string(1, ch);
                }
                key = string_to_int(charKey);
                listOfFreq.push_back(make_pair(key, symbol));
            }

            charKey.clear();
            symbol = "c";
            do{
                table.get(ch);
                charKey += string(1,ch);
            } while(ch != ' ');
            key = string_to_int(charKey);
            listOfFreq.push_back(make_pair(key, symbol));
        }
            
        if(ch == 's') //начинаем искать sp
        {
            table.get(ch);//считали либо пробел либо p
            if(ch == 'p') //если p то нашли sp
            {
                table.get(ch);// считали пробел 
                ch = '1'; //устанавливаем ch в любой символ кроме пробела, чтобы начать while
                charKey.clear();
                symbol = "sp";
                while(ch != ' ') //читаем число
                {
                    table.get(ch);
                    charKey += string(1, ch);
                }
                key = string_to_int(charKey);
                listOfFreq.push_back(make_pair(key, symbol));
            }
            charKey.clear();
            symbol = "s";
            do{
                table.get(ch);
                charKey += string(1,ch);
            } while(ch != ' ');
            key = string_to_int(charKey);
            listOfFreq.push_back(make_pair(key, symbol));
        }

            charKey.clear();
            symbol = string(1,ch);
            table.get(ch);
            do{
                table.get(ch);
                charKey += string(1,ch);
            } while(ch != ' ');
            key = string_to_int(charKey);
            listOfFreq.push_back(make_pair(key, symbol));
    }